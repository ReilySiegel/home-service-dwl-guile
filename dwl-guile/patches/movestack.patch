diff --git a/dwl.c b/dwl.c
index a541826..188c9cc 100644
--- a/dwl.c
+++ b/dwl.c
@@ -318,6 +318,7 @@ static void maplayersurfacenotify(struct wl_listener *listener, void *data);
 static void mapnotify(struct wl_listener *listener, void *data);
 static void maximizenotify(struct wl_listener *listener, void *data);
 static void monocle(Monitor *m);
+static void movestack(const Arg *arg);
 static void motionabsolute(struct wl_listener *listener, void *data);
 static void motionnotify(uint32_t time);
 static void motionrelative(struct wl_listener *listener, void *data);
@@ -492,6 +493,7 @@ static Atom netatom[NetLast];
 #include "dscm-utils.h"
 #include "dscm-config.h"
 #include "dscm-bindings.h"
+#include "patch-movestack.h"
 
 /* function implementations */
 void
@@ -1712,6 +1714,33 @@ monocle(Monitor *m)
 		wlr_scene_node_raise_to_top(&c->scene->node);
 }
 
+void
+movestack(const Arg *arg)
+{
+	Client *c, *sel = focustop(selmon);
+
+	if (wl_list_length(&clients) <= 1)
+		return;
+
+	if (arg->i > 0) {
+		wl_list_for_each(c, &sel->link, link) {
+			if (VISIBLEON(c, selmon) || &c->link == &clients)
+				break; /* found it */
+		}
+	} else {
+		wl_list_for_each_reverse(c, &sel->link, link) {
+			if (VISIBLEON(c, selmon) || &c->link == &clients)
+				break; /* found it */
+		}
+		/* backup one client */
+		c = wl_container_of(c->link.prev, c, link);
+	}
+
+	wl_list_remove(&sel->link);
+	wl_list_insert(&c->link, &sel->link);
+	arrange(selmon);
+}
+
 void
 motionabsolute(struct wl_listener *listener, void *data)
 {
@@ -3320,6 +3349,7 @@ main(int argc, char *argv[])
 	scm_init_guile();
 	dscm_register();
 	dscm_config_parse();
+	dscm_movestack_register();
 	setup();
 	writepid(runtimedir);
 	run(startup_cmd);
diff --git a/patch-movestack.h b/patch-movestack.h
new file mode 100644
index 0000000..abe75d1
--- /dev/null
+++ b/patch-movestack.h
@@ -0,0 +1,13 @@
+static inline SCM
+dscm_binding_movestack(SCM direction)
+{
+        Arg a = {.i = scm_to_int(direction)};
+        movestack(&a);
+        return SCM_BOOL_T;
+}
+
+static inline void
+dscm_movestack_register()
+{
+        scm_c_define_gsubr("dwl:move-stack", 1, 0, 0, &dscm_binding_movestack);
+}
